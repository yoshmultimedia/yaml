esphome:
  name: psua-k
  friendly_name: PSUA_K

esp8266:
  board: esp12e

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "AVGzeT5/eUOVtcBPSm/OZwK7J/3QOc2ie+UqYVkxnn4="

ota:
  password: "e39bcfb4ee70523ccff84ffd239b37cd"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Yosh Muhaimin Psua-K"
    password: "muhaimin"
captive_portal: {}
i2c:
- sda: 4
  scl: 5
  scan: true
  id: bus_a
  frequency: 50000.0
sensor:
- platform: ina3221
  address: 0x40
  channel_1:
    shunt_resistance: 0.1
    current:
      id: usb1a
      name: USB1 Ampere
      disabled_by_default: false
      force_update: true
      unit_of_measurement: A
      accuracy_decimals: 2
      device_class: current
      state_class: measurement
    power:
      id: usb1power
      name: USB1 Power
      disabled_by_default: false
      force_update: false
      unit_of_measurement: W
      accuracy_decimals: 2
      device_class: power
      state_class: measurement
    bus_voltage:
      id: usb1volt
      name: USB1 Volt
      disabled_by_default: false
      force_update: true
      unit_of_measurement: V
      accuracy_decimals: 2
      device_class: voltage
      state_class: measurement

  channel_2:
    shunt_resistance: 0.1
    current:
      id: usb2a
      name: USB2 A
      disabled_by_default: false
      force_update: true
      unit_of_measurement: A
      accuracy_decimals: 2
      device_class: current
      state_class: measurement
    power:
      id: usb2power
      name: USB2 Power
      disabled_by_default: false
      force_update: false
      unit_of_measurement: W
      accuracy_decimals: 2
      device_class: power
      state_class: measurement
    bus_voltage:
      id: usb2volt
      name: USB2 Volt
      disabled_by_default: false
      force_update: true
      unit_of_measurement: V
      accuracy_decimals: 2
      device_class: voltage
      state_class: measurement

  channel_3:
    shunt_resistance: 0.1
    current:
      id: psua
      name: PSU A
      disabled_by_default: false
      force_update: true
      unit_of_measurement: A
      accuracy_decimals: 2
      device_class: current
      state_class: measurement
    power:
      id: psupower
      name: PSU Power
      disabled_by_default: false
      force_update: false
      unit_of_measurement: W
      accuracy_decimals: 2
      device_class: power
      state_class: measurement
    bus_voltage:
      id: psuvolt
      name: PSU Volt
      disabled_by_default: false
      force_update: true
      unit_of_measurement: V
      accuracy_decimals: 2
      device_class: voltage
      state_class: measurement

  update_interval: 1ms
spi:
- clk_pin:
    number: 12
    mode:
      output: true
      analog: false
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
  mosi_pin:
    number: 14
    mode:
      output: true
      analog: false
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
  force_sw: false
display:
- platform: st7920
  rotation: 180
  width: 128
  height: 64
  cs_pin:
    number: 16
    inverted: true
    mode:
      output: true
      analog: false
      input: false
      open_drain: false
      pullup: false
      pulldown: false
  lambda: !lambda |-
    it.line(0, 0, 127, 0);
    it.line(0, 11, 98, 11);
    it.line(99, 10, 126, 10);
    it.line(99, 32, 126, 32);
    it.line(99, 42, 126, 42);
    it.line(0, 63, 127, 63);

    it.line(0, 64, 0, 0);
    it.line(127, 64, 127, 0);
    it.line(98, 64, 98, 0);

    it.print(2, 2, id(dot8x8), "PSUA SADEWO");
    it.printf(2, 45, id(dot), "PSU");
    it.printf(2, 55, id(dot), " -A-");
    
    
    it.printf(84, 14, id(fusb1volt), "A");
    it.printf(2, 11, id(fusb1a), "%.3f", id(usb1a).state);

    it.printf(84, 40, id(fusb1volt), "A");
    it.printf(30, 40, id(fusb1volt),"%.2f", id(psua).state);
    
    it.printf(102, 2, id(dot), "USB");
    it.printf(99, 10, id(seven), "%.2fV", id(usb2volt).state);
    it.printf(99, 20, id(seven), "%.2fA", id(usb2a).state);

    it.printf(102, 34, id(dot), "PSV");
    it.printf(99, 42, id(seven), "%.2fV", id(psuvolt).state);
    it.printf(99, 52, id(seven), "%.2fV", id(usb1volt).state);

  auto_clear_enabled: true
  update_interval: 1ms
font:
- file: "fonts/Lightdot-8x8.ttf"
  id: dot
  size: 7
- file: "fonts/Lightdot-8x8.ttf"
  id: dot8x8
  size: 8
- file: "fonts/SevenSegment.ttf"
  id: seven
  size: 12
- file: "fonts/psua.ttf"
  id: powers
  size: 20
- file: "fonts/usbfontbig.ttf"
  id: fusb1a
  size: 33
- file: "fonts/psua.ttf"
  id: fusb1volt
  size: 25


output:
- platform: esp8266_pwm
  pin:
    number: 13
    inverted: true
  frequency: 1000.0
  id: ledlcd
light:
  - platform: monochromatic
    output: ledlcd
    name: "lcd backlight"

    